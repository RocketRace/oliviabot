name: Build and deploy

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  # deploy:
  #   name: Deploy python source
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - uses: actions/checkout@v4
  #     - name: Connect to Tailscale
  #       uses: tailscale/github-action@v2
  #       with:
  #         oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
  #         oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
  #         tags: tag:ci
  #     - name: Connect to server and pull changes
  #       uses: appleboy/ssh-action@master
  #       with:
  #           host: sparrow
  #           username: ${{ secrets.SSH_USERNAME }}
  #           password: ${{ secrets.SSH_PASSWORD }}
  #           script: |
  #             set -e
  #             cd ${{ secrets.PROJECT_PATH }}
  #             git pull --ff-only
  build:
    name: Build and deploy binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install stable --profile minimal --no-self-update
      - name: Set up caching
        uses: Swatinem/rust-cache@v2
      - name: Cross compile
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: aarch64-unknown-linux-gnu
          args: --locked --release
          toolchain: beta
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      - name: Create github release
        uses: softprops/action-gh-release@v2
        with:
          files: ./target/aarch64-unknown-linux-gnu/release/oliviabot
          tag_name: v0.0.0
      - name: Connect to server and receive binaries
        uses: appleboy/ssh-action@master
        with:
          host: sparrow
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}
            git pull
            rm -rf target
            mkdir -p target/release
            wget -O target/release/oliviabot https://github.com/RocketRace/oliviabot/releases/latest/download/oliviabot
            chmod +x target/release/oliviabot
            touch .watch-trigger
            [ -f .build-success ] && rm .build-success || true
            timeout=120
            echo "Waiting $timeout seconds until the bot is launched"
            while [ ! -f .build-success ]; do
              if [ "$timeout" == 0 ]; then
                echo "Bot failed to launch!"
                exit 1
              fi
              echo "..."
              sleep 1
              ((timeout--))
            done

